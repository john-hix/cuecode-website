{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"index.html","title":"Home","text":"<ul> <li> The Team </li> <li> Presentations</li> <li> References</li> <li> Glossary</li> </ul> <p>Please see our Presentations section for an overview of the problem, solution, and major functional componenets of the CueCode system.</p> <p>The presentation will explain further the simple problem/solution statement below.</p>"},{"location":"index.html#problem","title":"Problem","text":"<p>End-users need to enter data and trigger actions in systems via Web APIs, using only natural lanaguage. But:</p> <ul> <li>There's not an abstracted framework for developers to create those features using existing Large Language Model (LLM) technology.</li> <li>Existing approaches leave too much up to the LLM, dramatically increasing risk. This prevents many organizations and software systems from adopting LLM technology.</li> </ul>"},{"location":"index.html#solution","title":"Solution","text":"<p>CueCode makes it easy to turn natural language into Web API calls. Developers may leverage this capability in a number of ways, many of which reduce the business risk of other available options for using LLMs to generate Web API calls.</p> <p> Please see the presentation slide decks for more information. Thank you for your time!</p>"},{"location":"glossary.html","title":"Glossary","text":""},{"location":"glossary.html#api-payload-informal","title":"API Payload (informal):","text":"<p>Information that is sent together with an API request or response. This data, which can be organized in JSON or XML forms, usually includes the details needed by the client to comprehend the answer or by the server to carry out an action.</p>"},{"location":"glossary.html#cuecode-developer-portal","title":"CueCode Developer Portal:","text":"<p>A web-based platform that allows easy API creation with NLP-generated requests and gives developers access to CueCode's tools, API configuration, and integration workflow management.</p> <p>HTTP Header: Additional metadata, such as the content type, authentication information, or caching instructions, are transmitted with HTTP requests and answers. Headers give context, which improves communication.</p>"},{"location":"glossary.html#http-hypertext-transfer-protocol","title":"HTTP (Hypertext Transfer Protocol):","text":"<p>The protocol that specifies the format and transmission of messages between web clients and servers. The type of request is determined by the HTTP methods (GET, POST, etc.).</p>"},{"location":"glossary.html#representational-state-transfer-rest","title":"Representational State Transfer (REST):","text":"<p>A set of design guidelines for networked apps that use stateless, cacheable, and consistent HTTP processes to facilitate interaction. Through the use of common HTTP techniques, REST allows clients to communicate with servers by modifying resources that match an expected structure.</p>"},{"location":"glossary.html#url-uniform-resource-locator","title":"URL (Uniform Resource Locator):","text":"<p>A web address that indicates where a resource is located on the internet. Protocol (such as HTTP/HTTPS), domain, and resource path are all included in URLs. They are necessary in order to access and consult internet resources.</p>"},{"location":"presentation.html","title":"Presentation","text":"<p>This page shows the progression of the team's presentation and refinement of the CueCode idea, starting with the most recent work at the top.</p>"},{"location":"presentation.html#design","title":"Design","text":""},{"location":"presentation.html#design-iteration-1","title":"Design iteration 1","text":""},{"location":"presentation.html#feasibility","title":"Feasibility","text":"<p>For the Feasibility presentation, the team was given a presentation outline to fill out over the course of several weeks.</p> <p> To advance slides, click directly on the embedded slides. Left / Right arrows do not work well at the moment</p>"},{"location":"presentation.html#feasability-v1","title":"Feasability V1","text":""},{"location":"presentation.html#feasability-v2","title":"Feasability V2","text":""},{"location":"presentation.html#feasability-v3","title":"Feasability V3","text":""},{"location":"presentation.html#feasibility-v4-final","title":"Feasibility V4 (Final)","text":"<p> work in progress until Oct 24</p>"},{"location":"presentation.html#design-iteration-3","title":"Design Iteration 3","text":""},{"location":"references.html","title":"References","text":"<p>About continuous integration with GitHub Actions. (n.d.). GitHub Docs. Retrieved October 22, 2024, from https://docs.github.com/en/actions/about-github-actions/about-continuous-integration-with-github-actions </p> <p>About Git. (n.d.). GitHub Docs. Retrieved October 22, 2024, from https://docs.github.com/en/get-started/using-git/about-git </p> <p>Against LLM maximalism \u00b7 Explosion. (2023, May 18). https://explosion.ai/blog/explosion.ai </p> <p>AppDirect | Developer Portal. (2024). Appdirect.com. https://developer.appdirect.com/ </p> <p>Au-Yeung, J. (2020, March 2). Best practices for REST API design. Stack Overflow Blog. https://stackoverflow.blog/2020/03/02/best-practices-for-rest-api-design/  Baker, S. (2024). Paragonsean/ChatBotAsync [Python]. https://github.com/paragonsean/ChatBotAsync (Original work published 2024)  </p> <p>Cloud Natural Language. (n.d.). Google Cloud. Retrieved September 26, 2024, from https://cloud.google.com/natural-language </p> <p>Evaluation | Genkit. (n.d.). Firebase. Retrieved September 14, 2024, from https://firebase.google.com/docs/genkit/evaluation </p> <p>Firebase Genkit. (n.d.). Retrieved September 14, 2024, from https://firebase.google.com/docs/genkit </p> <p>Function Calling. (n.d.). Retrieved September 14, 2024, from https://platform.openai.com/docs/guides/function-calling </p> <p>HTTP headers - HTTP | MDN. (n.d.). Developer.mozilla.org. https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers </p> <p>Learn Data with Mark (Director). (2023, July 26). Returning consistent/valid JSON with OpenAI/GPT [Video recording]. https://www.youtube.com/watch?v=lJJkBaO15Po </p> <p>Lorica, B. (2024, January 25). Expanding AI Horizons: The Rise of Function Calling in LLMs. Gradient Flow. https://gradientflow.com/expanding-ai-horizons-the-rise-of-function-calling-in-llms/ </p> <p>Merritt, R. (2023, November 15). What Is Retrieval-Augmented Generation aka RAG? NVIDIA Blog. https://blogs.nvidia.com/blog/what-is-retrieval-augmented-generation/ </p> <p>Microsoft/prompt-engine. (2024). [TypeScript]. Microsoft. https://github.com/microsoft/prompt-engine (Original work published 2022)  </p> <p>Natural Language Processing [NLP] Market Size | Growth, 2032. (n.d.). Retrieved September 14, 2024, from https://www.fortunebusinessinsights.com/industry-reports/natural-language-processing-nlp-market-101933 </p> <p>OpenAI Platform. (n.d.-a). Retrieved September 10, 2024, from https://platform.openai.com </p> <p>OpenAI Platform. (n.d.-b). Retrieved October 24, 2024, from https://platform.openai.com </p> <p>OpenAPI Specification\u2014Version 3.1.0 | Swagger. (n.d.). Retrieved September 10, 2024, from https://swagger.io/specification/ </p> <p>OpenAPITools/openapi-generator. (2024). [Java]. OpenAPI Tools. https://github.com/OpenAPITools/openapi-generator (Original work published 2018) piembsystech. (2023, October 2). Dynamic Binding in Python Language. PiEmbSysTech. https://piembsystech.com/dynamic-binding-in-python-language/ </p> <p>Scarpati, J. (n.d.). What is a URL (Uniform Resource Locator)? SearchNetworking. https://www.techtarget.com/searchnetworking/definition/URL </p> <p>SpaCy \u00b7 Industrial-strength Natural Language Processing in Python. (n.d.). Retrieved September 26, 2024, from https://spacy.io/ </p> <p>Stanfordnlp/dspy. (2024). [Python]. Stanford NLP. https://github.com/stanfordnlp/dspy (Original work published 2023)  </p> <p>Su, Y., Awadallah, A. H., Khabsa, M., Pantel, P., Gamon, M., &amp; Encarnacion, M. (2017). Building Natural Language Interfaces to Web APIs. Proceedings of the 2017 ACM on Conference on Information and Knowledge Management, 177\u2013186. https://doi.org/10.1145/3132847.3133009 </p> <p>Tool/function calling | LangChain. (n.d.). Retrieved September 14, 2024, from https://python.langchain.com/v0.1/docs/modules/model_io/chat/function_calling/ </p> <p>Tutorial: ChatGPT Over Your Data. (2023, February 6). LangChain Blog. https://blog.langchain.dev/tutorial-chatgpt-over-your-data/ Wei, J., Wang, X., Schuurmans, D., Bosma, M., Ichter, B., Xia, F., Chi, E., Le, Q., &amp; Zhou, D. (2023). </p> <p>Chain-of-Thought Prompting Elicits Reasoning in Large Language Models (arXiv:2201.11903). arXiv. http://arxiv.org/abs/2201.11903 </p> <p>What Is NLP (Natural Language Processing)? | IBM. (2021, September 23). https://www.ibm.com/topics/natural-language-processing </p> <p>What is Representational State Transfer (Rest) API? - Ampcontrol. (2024). Ampcontrol.io. https://www.ampcontrol.io/ev-terminology/what-is-rest-api </p> <p>Why Visual Studio Code? (n.d.). Retrieved October 22, 2024, from https://code.visualstudio.com/docs/editor/whyvscode </p> <p>W3Schools. (n.d.). HTTP Methods GET vs POST. W3schools.com. https://www.w3schools.com/tags/ref_httpmethods.asp </p> <p>Yao, S., Zhao, J., Yu, D., Du, N., Shafran, I., Narasimhan, K., &amp; Cao, Y. (2023). ReAct: Synergizing Reasoning and Acting in Language Models (arXiv:2210.03629). arXiv. http://arxiv.org/abs/2210.03629 </p> <p>Zafin, E. at. (2023, August 15). Bridging the Gap: Exploring use of Natural Language to interact with Complex Systems. Engineering at Zafin. https://medium.com/engineering-zafin/bridging-the-gap-exploring-using-natural-language-to-interact-with-complex-systems-11c1b056cc19 </p>"},{"location":"team.html","title":"Team","text":"<ul> <li> John Hicks - Team lead/Backend specialist   John Hicks is a part-time Computer Science major at ODU, a transfer student from Tidewater Community College (TCC) where he earned his Associate of Science with a specialization in Computer Science. John has been employed full-time in software development and IT roles during most of his time in school. John began his journey into software development when his parents' small business needed a website upgrade from Microsoft Front Page to WordPress. On understanding WordPress\u2019s hook and filter mechanisms, John\u2019s imagination was kindled in wondering what other ways of writing software there might be. That curiosity turned to flame and was formed into skill with the help of many friends, family, Internet contributors, workplace mentors, and school faculty.</li> <li> Freddie Boateng - Documentation Specialist/Webmaster    Fred Boateng is Computer Science major with a minor in Cybersecurity. He is from Northern Virginia and currently working as a Cybersecurity Engineer with Zachary Piper Solutions. He strives to always improve and stay updated  to the world of technology, enabling him to reach his goals.</li> <li> Chase Wallace - Backend Specialist    Chase Wallace is a Computer Science and Biomedical Sciences double major from Norfolk with a strong interest in neuroscience and artificial intelligence. He is always ready to learn new skills and broaden his horizons with challenging new projects.</li> <li> Andrew Bausas - Backend Specialist     I am a computer science major from Virginia Beach. I aim to improve my skills and eventually use them to make games.</li> <li> Kobe Franssen - Backend/Database Specialist    Full time Computer Science major at ODU while also working part time at the ODU Computer Science Consultant Group as a System Administrator. Experienced in Java, Python, C++ and API handling such as with Discord Bots. Love to work on cars and i have 3 cats.</li> <li> Sean Baker  - Backend Specialist   Sean\u2019s journey into computer science has been unconventional and spans both time and institutions. A transfer student from Piedmont Virginia Community College (PVCC), Sean earned his associate degree in computer science in 2016, but his tech journey began much earlier. At 14, he built his first WordPress site to supplement his allowance, which led to articles like \"ten reasons this iphone will suceed\",  Since then,   Rather than pursuing a conventional corporate path, Sean has prioritized creativity and innovation, which has led him to work on projects that push technological boundaries, including contributing to self-driving car technology with Edison2 and developing die cast automation software for VisiTrak Worldwide and Rockwell Automation. His self-taught, autodidactic learning approach has defined his career. Set to graduate this spring, Sean hopes to pursue a masters degree.  </li> <li> Diya Patel - Fullstack Developer    Diya Patel is a junior at ODU, pursuing a Bachelor's degree in Computer Science. She is interested in learning about the newest advancements in web development and artificial intelligence. She has an ongoing   desire to take on new tasks and expand her skill set.  </li> </ul>"},{"location":"written-report.html","title":"Lab 1 written report","text":"<p>The team produced a template, which we each individually used to write a one-page summary of CueCode for someone unfamiliar with the domain.</p>"},{"location":"written-report.html#template","title":"Template","text":"<p>The team produced a template which we each individually used to write a one-page summary of CueCode for someone unfamiliar with the domain</p>"},{"location":"written-report.html#kobe-franssen-submission","title":"Kobe Franssen - Submission","text":""},{"location":"written-report.html#john-hicks-submission","title":"John Hicks - Submission","text":""},{"location":"written-report.html#freddie-boateng","title":"Freddie Boateng","text":""}]}